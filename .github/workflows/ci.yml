# The full deployment pipeline
name: Deploy

on:
  pull_request:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest # x86_64-linux
    environment: deploy
    steps:
      - name: git checkout
        uses: actions/checkout@v4

      - name: Install Nix
        uses: DeterminateSystems/nix-installer-action@main
        with:
          determinate: true

      - name: FlakeHub Cache
        uses: DeterminateSystems/flakehub-cache-action@main

      - name: Build TODOs service Docker container using Nix
        run: nix build ".#dockerImages.x86-64-linux.default"
        # Store the image in ./result

      - name: Docker login
        uses: docker/login-action@v2
        with:
          username: "${{ secrets.DOCKER_USERNAME }}"
          password: "${{ secrets.DOCKER_ACCESS_TOKEN }}"

      - name: Load and push image to Docker Hub
        run: |
          export IMAGE_TAG=$(docker load < result | grep -Po 'Loaded image: \K.*')
          docker push "${IMAGE_TAG}"
          echo "IMAGE_TAG=${IMAGE_TAG}" >> $GITHUB_ENV

      - name: Update the image in our Deployment
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: set image deployment.apps/todos-deployment todos="${{ env.IMAGE_TAG }}"

      - name: Restart the Deployment
        uses: actions-hub/kubectl@master
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}
        with:
          args: rollout restart deployment.apps/todos-deployment
